buildscript {
	ext.kotlin_version = '1.3.41'

	repositories {
		jcenter()
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
		classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
	}
}

group 'tursom'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'

sourceCompatibility = 1.8

repositories {
	jcenter()
}

dependencies {
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
	implementation "com.google.code.gson:gson:2.8.2"
//	implementation 'org.apache.commons:commons-lang3:3.5'

	// spring
	implementation 'org.springframework:spring-context:5.1.10.RELEASE'
	implementation 'commons-dbutils:commons-dbutils:1.7'

	// 数据库与序列化部分可选
	implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version

	implementation("org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.11.1")

	// 解析XML
	implementation group: 'dom4j', name: 'dom4j', version: '1.6.1'

	// database.sqlite 依赖的库
	implementation 'org.xerial:sqlite-jdbc:3.21.0.1'
	// database.mysql 依赖的库
	implementation group: 'mysql', name: 'mysql-connector-java', version: '+'

	// socket.server.nio 需要的netty
	implementation group: "io.netty", name: "netty-all", version: "4.1.33.Final"

	// mongodb
	implementation "org.mongodb:mongo-java-driver:+"

	// kotlin 协程
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.1'

	// OkHttp
	implementation("com.squareup.okhttp3:okhttp:3.14.1")

	// vert.x-jdbc-client
	implementation 'io.vertx:vertx-jdbc-client:3.7.0'

	// vert.x-web
	implementation "io.vertx:vertx-web:3.7.0"

	// 计算对象大小
	compile 'org.apache.lucene:lucene-core:4.0.0'

	testImplementation group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

//打包源代码
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives sourcesJar
}
